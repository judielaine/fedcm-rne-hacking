@startuml
'https://plantuml.com/sequence-diagram

autonumber

Alice -> Wiki: Tries to access wiki
Wiki --> RP: Is logged in? No
RP --> Browser: Invokes FedCM with multilateral context
FedCM --> Alice: Shows IdP chooser
Alice --> FedCM: Chooses IdP
FedCM --> IdP: Redirects Alice to IdP with SAML session initiator for RP
IdP --> Alice: Login challenge
Alice --> IdP: Logs in
IdP --> RP: Redirects to RP with SAML assertion in front channel
RP --> Wiki: Verifies SAML assertion, attributes in session variables, redirects to Wiki
Wiki --> Alice: Grants access
@enduml


@startuml BasicSAML

title "Basic SAML Authentication, no FedCM"

box User
    participant Alice
    participant Browser
    participant "Window" as window
end box

box research.org
    participant Wiki
    participant RP
end box

participant "IdP 01" as IdP01
participant "IdP 02" as IdP02

Alice --> Browser: go wiki.\nresource.org
Browser  <-> Wiki: response 302 

group SAML Profile ยง4.1.3.1
    Browser -> RP: GET RP
    RP --> RP: No active\nSSO state\nfound.\nSet\nRelayState.
end group
group SAML Profile ยง4.1.3.2
    RP -> Browser: HTML for RP UI;\nsession cookie
    Browser --> window **
    activate window 
    note over Alice, IdP02
        The RP presents the user with a list of possible identity providers. OCLC has 30,000 
        customers in our WAYF (with a variety of IdP protocols). eduGAIN has 5269 SAML IdPs.
    end note
    Alice --> window: select IdP
    window --> Browser 
    Browser -> RP: POST choice of IdP02
    RP --> RP  
    note left
        Construct SAML Request
        1. Issuer's unique entity ID, URI
        2. return URL
        3. optional <AuthnRequest>, for example to signal MFA
        4. Security elements: 
            time stamp
            unique ID
            signature
        5. IdP 
    end note

end group



alt Assume existing SSO  state at IdP02
    IdP02 -> Browser:  Single Account Label
    note over Browser, IdP02
        SAML IdPs would not expose more than one
        account at a time. The label for the account 
        may not be an email. 
    end note
else Assume no existing SSO state at IdP02
    IdP02 -> Browser: request to initiate authN
end

Browser <-> IdP01: GET client?....
Browser -> IdP02: GET client?client_id=[entityId]&\nSAML_request=[req]

alt Assume IdP recognizes RP
    IdP02 -> Browser: metadata about IdP-RP interaction
     note over Browser, IdP02
        Note that the RP's request might require the 
        browser to step up an already active authentication
        state to improve the authentication assurance.
        The response here would include a message that the
        IdP needs control before authenticating the user.
     end note
else IdP cannot satisfy RP request
    IdP02 -> Browser: Error code, Error message for user
    note over Browser, IdP02
        An IdP might not recognize an RP at all, or the IdP
        might not be able to satisfy criteria in the current 
        RP request.
    end note
end

Browser --> Browser: IdP chooser
note right
    Assume UI presents the two previously
    registered with a link to choose a 
    different one. If there was an error 
    message for a previously registered 
    IdP, display to the user, but do not 
    allow selection.

    Assume choice between IdP 01 & IdP 02
    or select from more.
end note
Alice --> Browser: select IDP 02

Browser -> IdP02: cookies; POST assertion
note over Browser, IdP02
    Includes SAMLRequest 
end note

alt Assume active SSO stete, no step up
    IdP02 -> Browser: LARGE XML response, encoded, etc
    destroy window
    Browser -> RP: response\nsession cookie
    destroy Browser
    RP --> RP: establish\nsession
    RP -> Browser: 302
    Browser <-> Wiki: GET wiki
    Browser --> window: render wiki
    activate window
else Assume IdP requests control
    [--> Browser
    activate Browser
    IdP02 -> Browser: HTML
    destroy window
    Browser -> window: Render IdP page
    activate window
    note over Browser, IdP02
        There may be multiple POSTS here, particularly given
        multiple factors to establish identity. It is conceivable
        that this flow may spawn a second authentication
        flow.
    end note
    ...iterations of...
    Alice --> window: interaction
    window --> Browser
    Browser <-> IdP02
    ...eventually...
    window -[#red]-> Browser:  n.c.post\n(LARGE XML\nresponse)
    destroy window
    Browser -> RP: response\nsession cookie
    destroy Browser
    RP --> RP: establish\nsession
    RP -> Browser: 302
    Browser <-> Wiki: GET wiki
    Browser --> window: render wiki
    activate window
end    


@enduml


@startuml fedCMDetailSeq

box User
    participant Alice
    participant Browser
    participant "Window" as window
end box

box research.org
    participant Wiki
    participant RP
end box

participant "IdP 01" as IdP01
participant "IdP 02" as IdP02

Alice --> Browser: go wiki.\nresource.org
Browser  <-> Wiki: response 302 
Browser -> RP: GET RP
RP --> RP: No active\nSSO state\nfound
RP -> Browser: HTML for RP UI;\nsession cookie
Browser --> window **
activate window 
note over Browser, window
    It is possible for the RP's UI page to interact with the user
    BEFORE calling n.c.get. It would be sad if this was 
    a pre-discovery step to cut down on the number of IdPs.
end note
window -[#red]-> Browser:n.c.get\n(IdP list) 
activate Browser
note right
    Assume https://github.com/fedidcg/
    FedCM/blob/main/proposals/multi-
    idp-api.md is implemented.
    Assume clientID = RP entity ID and a
    SAML_request key with a value of a SAML 
    request as would be sent in redirect.

    Note: this is huge for R&E federations.
end note
Browser --> Browser: state engine
note right
    Assume two previously registered 
    IdPs for this RP. Browser will
    optimize by first offering 
    registereed IdPs 
end note
Browser <-> IdP01 : GET /.well-known/web-identity
Browser <-> IdP02 : GET /.well-known/web-identity
Browser <-> IdP01 : GET config
Browser <-> IdP02 : GET config
note over Browser, IdP02
    Assume IdentityProviderAPIConfig is extended to include
     a protocol key; IdP2 returns protocol=SAMLv2. 
    Assume this protocol value triggers browsers to 
    append a query parameter SAMLRequest to the client
    endpoint call, with a value provided in the n.c.get(IdP list)
    call from the RP. This also prepares the browser to 
    expect the response to the account call.
end note

Browser -> IdP01: Cookies
Browser <-> IdP01: GET accounts

Browser -> IdP02: Cookies
Browser -> IdP02: GET accounts

alt Assume existing SSO  state at IdP02
    IdP02 -> Browser:  Single Account Label
    note over Browser, IdP02
        SAML IdPs would not expose more than one
        account at a time. The label for the account 
        may not be an email. 
    end note
else Assume no existing SSO state at IdP02
    IdP02 -> Browser: request to initiate authN
end

Browser <-> IdP01: GET client?....
Browser -> IdP02: GET client?client_id=[entityId]&\nSAML_request=[req]

alt Assume IdP recognizes RP
    IdP02 -> Browser: metadata about IdP-RP interaction
     note over Browser, IdP02
        Note that the RP's request might require the 
        browser to step up an already active authentication
        state to improve the authentication assurance.
        The response here would include a message that the
        IdP needs control before authenticating the user.
     end note
else IdP cannot satisfy RP request
    IdP02 -> Browser: Error code, Error message for user
    note over Browser, IdP02
        An IdP might not recognize an RP at all, or the IdP
        might not be able to satisfy criteria in the current 
        RP request.
    end note
end

Browser --> Browser: IdP chooser
note right
    Assume UI presents the two previously
    registered with a link to choose a 
    different one. If there was an error 
    message for a previously registered 
    IdP, display to the user, but do not 
    allow selection.

    Assume choice between IdP 01 & IdP 02
    or select from more.
end note
Alice --> Browser: select IDP 02

Browser -> IdP02: cookies; POST assertion
note over Browser, IdP02
    Includes SAMLRequest 
end note

alt Assume active SSO stete, no step up
    IdP02 -> Browser: LARGE XML response, encoded, etc
    destroy window
    Browser -> RP: response\nsession cookie
    destroy Browser
    RP --> RP: establish\nsession
    RP -> Browser: 302
    Browser <-> Wiki: GET wiki
    Browser --> window: render wiki
    activate window
else Assume IdP requests control
    [--> Browser
    activate Browser
    IdP -> Browser: HTML
    destroy window
    Browser -> window: Render IdP page
    activate window
    note over Browser, IdP02
        There may be multiple POSTS here, particularly given
        multiple factors to establish identity. It is conceivable
        that this flow may spawn a second authentication
        flow.
    end note
    ...iterations of...
    Alice --> window: interaction
    window --> Browser
    Browser <-> IdP02
    ...eventually...
    window -[#red]-> Browser:  n.c.post\n(LARGE XML\nresponse)
    destroy window
    Browser -> RP: response\nsession cookie
    destroy Browser
    RP --> RP: establish\nsession
    RP -> Browser: 302
    Browser <-> Wiki: GET wiki
    Browser --> window: render wiki
    activate window
end    


@enduml
